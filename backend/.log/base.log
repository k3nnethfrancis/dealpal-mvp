2023-11-19 08:24:29,527 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 08:24:29,531 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_XLsEMqcFSAlcTvXMeMENg6x3'}
2023-11-19 08:24:30,035 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='yes i think so'), <starlette.background.BackgroundTasks object at 0x7f88e3507dc0>, <openai.AsyncOpenAI object at 0x7f88e319cd60>, Thread(id='thread_eTZy4qGpq7Z5CJywVU67jRa4', created_at=1700411070, metadata={}, object='thread'), Assistant(id='asst_XLsEMqcFSAlcTvXMeMENg6x3', created_at=1699889503, description=None, file_ids=['file-AnqYNUJNL0co7zh5r6kxYmOo'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\n\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 08:24:30,036 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7f88e321c9e0>
2023-11-19 08:24:30,036 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('yes i think so', <openai.AsyncOpenAI object at 0x7f88e319cd60>, Thread(id='thread_eTZy4qGpq7Z5CJywVU67jRa4', created_at=1700411070, metadata={}, object='thread'), Assistant(id='asst_XLsEMqcFSAlcTvXMeMENg6x3', created_at=1699889503, description=None, file_ids=['file-AnqYNUJNL0co7zh5r6kxYmOo'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\n\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 08:24:30,037 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7f88e321d850>
2023-11-19 08:26:57,186 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 08:26:57,190 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_XLsEMqcFSAlcTvXMeMENg6x3'}
2023-11-19 08:28:48,375 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 08:28:48,379 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_XLsEMqcFSAlcTvXMeMENg6x3'}
2023-11-19 08:29:16,349 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 08:29:16,364 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_XLsEMqcFSAlcTvXMeMENg6x3'}
2023-11-19 08:30:18,513 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 08:30:18,517 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_XLsEMqcFSAlcTvXMeMENg6x3'}
2023-11-19 08:32:08,730 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 08:32:08,734 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_XLsEMqcFSAlcTvXMeMENg6x3'}
2023-11-19 08:33:01,745 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 08:33:01,754 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_XLsEMqcFSAlcTvXMeMENg6x3'}
2023-11-19 08:33:58,106 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 08:33:58,112 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_XLsEMqcFSAlcTvXMeMENg6x3'}
2023-11-19 21:35:08,843 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 21:35:08,847 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_M9bfhEUkgCuV7wbJmWL4HOMr'}
2023-11-19 21:37:18,507 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fe7721de640>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 21:37:18,508 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fe7722b5dc0>
2023-11-19 21:37:25,963 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me one gaming infeluncer'), <starlette.background.BackgroundTasks object at 0x7fe772258b20>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:37:25,963 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7604f9b40>
2023-11-19 21:37:25,965 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me one gaming infeluncer', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:37:25,965 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe76055cd40>
2023-11-19 21:39:02,201 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me one gaming influencer'), <starlette.background.BackgroundTasks object at 0x7fe772258fa0>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:39:02,205 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7604f9240>
2023-11-19 21:39:02,206 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me one gaming influencer', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:39:02,206 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7604f9a40>
2023-11-19 21:39:26,466 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fe7721de8e0>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 21:39:26,466 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fe7721fbf40>
2023-11-19 21:39:34,532 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me one gamin ginflucner'), <starlette.background.BackgroundTasks object at 0x7fe7721d4e20>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:39:34,533 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7722b5ac0>
2023-11-19 21:39:34,533 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me one gamin ginflucner', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:39:34,534 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7722b57c0>
2023-11-19 21:39:55,759 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='ok ninja'), <starlette.background.BackgroundTasks object at 0x7fe7721878b0>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:39:55,759 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7722b5bc0>
2023-11-19 21:39:55,760 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('ok ninja', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:39:55,760 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7722b5dc0>
2023-11-19 21:40:54,132 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fe7721d0880>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 21:40:54,133 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fe7722b5d40>
2023-11-19 21:40:59,863 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me a gaming infleuncer'), <starlette.background.BackgroundTasks object at 0x7fe7722344f0>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:40:59,864 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7722b5d40>
2023-11-19 21:40:59,865 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me a gaming infleuncer', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:40:59,866 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7722b5bc0>
2023-11-19 21:41:31,666 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='ok ninja'), <starlette.background.BackgroundTasks object at 0x7fe772213700>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:41:31,666 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7722b5ec0>
2023-11-19 21:41:31,668 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('ok ninja', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:41:31,668 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7722b5940>
2023-11-19 21:44:18,608 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fe7721cdd60>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 21:44:18,609 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fe7722b5ec0>
2023-11-19 21:44:26,516 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me a gaming infleucner'), <starlette.background.BackgroundTasks object at 0x7fe772186df0>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:44:26,517 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7604f9ec0>
2023-11-19 21:44:26,517 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me a gaming infleucner', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:44:26,518 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7604f9a40>
2023-11-19 21:44:42,663 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='ok'), <starlette.background.BackgroundTasks object at 0x7fe772169220>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:44:42,664 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7604f9cc0>
2023-11-19 21:44:42,665 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('ok', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:44:42,666 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7604f9b40>
2023-11-19 21:45:15,032 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='generate copy for ninja'), <starlette.background.BackgroundTasks object at 0x7fe7721bdfa0>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:45:15,033 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7604f9cc0>
2023-11-19 21:45:15,034 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('generate copy for ninja', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:45:15,035 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7604f9b40>
2023-11-19 21:47:40,307 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fe772218220>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 21:47:40,308 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fe7604f9cc0>
2023-11-19 21:47:46,362 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='giv eme a gaming infleuncer'), <starlette.background.BackgroundTasks object at 0x7fe772161c10>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:47:46,363 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7722b59c0>
2023-11-19 21:47:46,364 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('giv eme a gaming infleuncer', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:47:46,365 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7722b5dc0>
2023-11-19 21:48:03,829 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='generate copy for ninja'), <starlette.background.BackgroundTasks object at 0x7fe7721866d0>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:48:03,830 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7721c91c0>
2023-11-19 21:48:03,831 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('generate copy for ninja', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:48:03,832 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7721c9840>
2023-11-19 21:58:14,556 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fe772131130>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 21:58:14,557 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fe7721fb940>
2023-11-19 21:58:21,902 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='dammi copy per nija'), <starlette.background.BackgroundTasks object at 0x7fe77218d5e0>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:58:21,902 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7721fb940>
2023-11-19 21:58:21,903 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('dammi copy per nija', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:58:21,903 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7721fbbc0>
2023-11-19 21:59:33,320 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fe7721426d0>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 21:59:33,320 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fe7721fb940>
2023-11-19 21:59:38,367 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me acopy for ninja'), <starlette.background.BackgroundTasks object at 0x7fe7721ca2e0>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:59:38,368 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7721fb940>
2023-11-19 21:59:38,369 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me acopy for ninja', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 21:59:38,369 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7721fbbc0>
2023-11-19 22:03:43,723 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fe77218b940>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:03:43,724 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fe7721fb940>
2023-11-19 22:03:49,397 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me ninja copy'), <starlette.background.BackgroundTasks object at 0x7fe7604ab2b0>, <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:03:49,398 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fe7721fbbc0>
2023-11-19 22:03:49,398 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me ninja copy', <openai.AsyncOpenAI object at 0x7fe7604f6820>, Thread(id='thread_91R1biPbLZuXaTXUnxbJwSSk', created_at=1700458509, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:03:49,399 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fe7722b56c0>
2023-11-19 22:14:06,380 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 22:14:06,387 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_M9bfhEUkgCuV7wbJmWL4HOMr'}
2023-11-19 22:19:44,091 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7f2e370c1670>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:19:44,092 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7f2e3719ae40>
2023-11-19 22:19:49,911 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me ninja copy'), <starlette.background.BackgroundTasks object at 0x7f2e370c16d0>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:19:49,912 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7f2e3719ae40>
2023-11-19 22:19:49,912 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me ninja copy', <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:19:49,913 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7f2e25440dc0>
2023-11-19 22:20:57,876 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7f2e370bdee0>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:20:57,877 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7f2e2544bbc0>
2023-11-19 22:20:59,277 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me ninja copy'), <starlette.background.BackgroundTasks object at 0x7f2e37092190>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:20:59,277 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7f2e3704b2c0>
2023-11-19 22:20:59,277 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me ninja copy', <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:20:59,277 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7f2e3704b340>
2023-11-19 22:22:08,869 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7f2e3708f5b0>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:22:08,877 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7f2e3719a840>
2023-11-19 22:22:10,292 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me ninja copy'), <starlette.background.BackgroundTasks object at 0x7f2e2540f370>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:22:10,293 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7f2e370a2d40>
2023-11-19 22:22:10,294 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me ninja copy', <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:22:10,294 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7f2e370a2b40>
2023-11-19 22:26:53,332 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7f2e370bd2b0>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:26:53,333 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7f2e370a2640>
2023-11-19 22:26:58,354 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me ninja copy'), <starlette.background.BackgroundTasks object at 0x7f2e370d8850>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:26:58,355 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7f2e370a2b40>
2023-11-19 22:26:58,356 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me ninja copy', <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:26:58,356 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7f2e370a2c40>
2023-11-19 22:30:12,183 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7f2e2540f4c0>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:30:12,184 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7f2e2544bcc0>
2023-11-19 22:32:07,631 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7f2e253cd8e0>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:32:07,632 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7f2e3719ad40>
2023-11-19 22:42:02,882 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7f2e3705c1f0>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:42:02,885 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7f2e3719aa40>
2023-11-19 22:42:06,890 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='ninja copy'), <starlette.background.BackgroundTasks object at 0x7f2e3708f550>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:42:06,891 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7f2e2544bb40>
2023-11-19 22:42:06,892 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('ninja copy', <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:42:06,892 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7f2e2544bcc0>
2023-11-19 22:46:52,457 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7f2e3705c5e0>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:46:52,457 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7f2e370a2940>
2023-11-19 22:47:03,171 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me ninja copy'), <starlette.background.BackgroundTasks object at 0x7f2e3700b430>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:47:03,172 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7f2e370a2940>
2023-11-19 22:47:03,172 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me ninja copy', <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:47:03,173 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7f2e370a2b40>
2023-11-19 22:50:57,188 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7f2e37062e20>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:50:57,189 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7f2e370a2240>
2023-11-19 22:51:01,981 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='giv eme nija copy'), <starlette.background.BackgroundTasks object at 0x7f2e37056250>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:51:01,982 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7f2e253c00c0>
2023-11-19 22:51:01,982 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('giv eme nija copy', <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:51:01,983 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7f2e253c0dc0>
2023-11-19 22:54:53,112 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7f2e370fd550>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:54:53,112 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7f2e253c00c0>
2023-11-19 22:54:57,601 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='GIVE ME NIJA COPY'), <starlette.background.BackgroundTasks object at 0x7f2e3705b790>, <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:54:57,602 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7f2e370a2d40>
2023-11-19 22:54:57,603 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('GIVE ME NIJA COPY', <openai.AsyncOpenAI object at 0x7f2e253d4f10>, Thread(id='thread_ybwXdSDfOKYDZEO6Yq5VUIzp', created_at=1700460846, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=[], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])) and kwargs: {}
2023-11-19 22:54:57,603 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7f2e370a20c0>
2023-11-19 22:57:02,644 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 22:57:02,646 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_M9bfhEUkgCuV7wbJmWL4HOMr'}
2023-11-19 22:57:23,729 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fcea0767df0>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 22:57:23,729 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fcea083ce40>
2023-11-19 22:57:28,474 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='GIVE ME NINJA COPY'), <starlette.background.BackgroundTasks object at 0x7fcea0767400>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 22:57:28,475 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fcea083cdc0>
2023-11-19 22:57:28,476 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('GIVE ME NINJA COPY', <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 22:57:28,476 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fce8eae3dc0>
2023-11-19 23:00:33,470 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fcea0724a60>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 23:00:33,479 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fcea083cbc0>
2023-11-19 23:00:38,108 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='GIVE ME NINJA COPY'), <starlette.background.BackgroundTasks object at 0x7fcea07670a0>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:00:38,108 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fcea06f74c0>
2023-11-19 23:00:38,109 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('GIVE ME NINJA COPY', <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:00:38,109 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fcea06f7540>
2023-11-19 23:05:09,566 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fcea0767160>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 23:05:09,567 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fcea0784ec0>
2023-11-19 23:05:16,048 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='GIVE ME NINJA COPY'), <starlette.background.BackgroundTasks object at 0x7fcea06efc10>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:05:16,049 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fcea0784ac0>
2023-11-19 23:05:16,050 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('GIVE ME NINJA COPY', <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:05:16,051 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fcea0784ec0>
2023-11-19 23:09:11,479 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fcea0750e20>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 23:09:11,481 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fcea0784d40>
2023-11-19 23:09:17,413 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='GIVE ME NINJA COPY'), <starlette.background.BackgroundTasks object at 0x7fcea07247c0>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:09:17,414 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fcea0784d40>
2023-11-19 23:09:17,416 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('GIVE ME NINJA COPY', <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:09:17,417 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fcea0784540>
2023-11-19 23:15:30,549 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fcea0849cd0>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 23:15:30,551 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fcea083c5c0>
2023-11-19 23:15:44,208 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='generate nija copy'), <starlette.background.BackgroundTasks object at 0x7fcea07247c0>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:15:44,209 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fce8ea7eec0>
2023-11-19 23:15:44,210 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('generate nija copy', <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:15:44,211 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fce8ea7ea40>
2023-11-19 23:19:18,757 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fcea0708100>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 23:19:18,757 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fcea083c5c0>
2023-11-19 23:19:27,602 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me ninja copy'), <starlette.background.BackgroundTasks object at 0x7fcea0849af0>, <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:19:27,603 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fcea083c5c0>
2023-11-19 23:19:27,604 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me ninja copy', <openai.AsyncOpenAI object at 0x7fce8ea8b070>, Thread(id='thread_3RnKQAVQ8jmwNuIwDXy1myO0', created_at=1700463423, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-niZCYsk6AZdv24oSFvk5ZRlt'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:19:27,605 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fcea083cec0>
2023-11-19 23:29:20,591 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-19 23:29:20,596 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy.After you provide the copy, include a link to the influencer's profile and instruct to click on the link to direct message the user.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_M9bfhEUkgCuV7wbJmWL4HOMr'}
2023-11-19 23:29:39,930 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea20675d30>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 23:29:39,930 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea20749e40>
2023-11-19 23:29:49,358 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me ninja copy'), <starlette.background.BackgroundTasks object at 0x7fea206755b0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:29:49,358 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea20749d40>
2023-11-19 23:29:49,360 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me ninja copy', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:29:49,360 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea0e9f0dc0>
2023-11-19 23:34:58,815 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea206729d0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 23:34:58,816 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea20655f40>
2023-11-19 23:35:04,440 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='genereat ninja copy'), <starlette.background.BackgroundTasks object at 0x7fea20675670>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:35:04,441 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea20655f40>
2023-11-19 23:35:04,443 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('genereat ninja copy', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:35:04,444 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20655340>
2023-11-19 23:37:47,086 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea20646970>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 23:37:47,087 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea20691740>
2023-11-19 23:37:54,966 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='generate nijan copy'), <starlette.background.BackgroundTasks object at 0x7fea20672820>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:37:54,967 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea207499c0>
2023-11-19 23:37:54,968 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('generate nijan copy', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:37:54,969 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20749ac0>
2023-11-19 23:48:52,923 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea206c89a0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 23:48:52,924 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea20749740>
2023-11-19 23:48:58,619 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me ninja copy'), <starlette.background.BackgroundTasks object at 0x7fea205f6fa0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:48:58,620 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea20749740>
2023-11-19 23:48:58,620 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me ninja copy', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:48:58,620 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20749840>
2023-11-19 23:54:41,323 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea2066eeb0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-19 23:54:41,323 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea20749cc0>
2023-11-19 23:54:47,537 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me nijna copy'), <starlette.background.BackgroundTasks object at 0x7fea20658c10>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:54:47,538 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea0e96fbc0>
2023-11-19 23:54:47,539 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me nijna copy', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-19 23:54:47,540 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea0e96fc40>
2023-11-20 00:01:51,361 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea20675430>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-20 00:01:51,362 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea0e96fc40>
2023-11-20 00:01:56,892 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='genreate nija copy'), <starlette.background.BackgroundTasks object at 0x7fea205b8fa0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:01:56,893 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea20691740>
2023-11-20 00:01:56,894 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('genreate nija copy', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:01:56,895 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20691640>
2023-11-20 00:32:39,591 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='hi'), <starlette.background.BackgroundTasks object at 0x7fea20646160>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:32:39,592 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea206916c0>
2023-11-20 00:32:39,593 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('hi', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:32:39,593 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20655440>
2023-11-20 00:36:48,515 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='hi'), <starlette.background.BackgroundTasks object at 0x7fea20646be0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:36:48,515 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea20691c40>
2023-11-20 00:36:48,516 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('hi', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:36:48,516 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea206915c0>
2023-11-20 00:36:56,693 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea205f86a0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-20 00:36:56,694 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea206919c0>
2023-11-20 00:37:03,048 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me ninja co[y'), <starlette.background.BackgroundTasks object at 0x7fea205bdf70>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:37:03,049 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea20691940>
2023-11-20 00:37:03,050 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me ninja co[y', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:37:03,051 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20691740>
2023-11-20 00:46:34,226 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea20606160>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-20 00:46:34,228 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea206919c0>
2023-11-20 00:46:40,562 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NINJA COPY'), <starlette.background.BackgroundTasks object at 0x7fea206080a0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:46:40,568 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea0e9fbcc0>
2023-11-20 00:46:40,570 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NINJA COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:46:40,571 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea206919c0>
2023-11-20 00:49:55,644 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea2065d1c0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-20 00:49:55,645 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea20666740>
2023-11-20 00:49:57,135 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NINJA COPY'), <starlette.background.BackgroundTasks object at 0x7fea2061a220>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:49:57,136 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea205df640>
2023-11-20 00:49:57,137 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NINJA COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:49:57,137 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea205df6c0>
2023-11-20 00:51:08,032 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea206619d0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-20 00:51:08,032 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea20691740>
2023-11-20 00:51:15,179 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NINJA COPY'), <starlette.background.BackgroundTasks object at 0x7fea2065d850>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:51:15,187 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea20691cc0>
2023-11-20 00:51:15,189 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NINJA COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:51:15,190 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20691740>
2023-11-20 00:52:05,046 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NIJA COPY'), <starlette.background.BackgroundTasks object at 0x7fea205ec610>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:52:05,048 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea206917c0>
2023-11-20 00:52:05,050 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NIJA COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:52:05,052 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea0e9fbcc0>
2023-11-20 00:56:38,530 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NIJA COPY'), <starlette.background.BackgroundTasks object at 0x7fea20675d90>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:56:38,539 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea207494c0>
2023-11-20 00:56:38,540 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NIJA COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:56:38,541 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20749a40>
2023-11-20 00:58:50,638 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NIJNA COPY'), <starlette.background.BackgroundTasks object at 0x7fea2062e4f0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:58:50,639 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea20691bc0>
2023-11-20 00:58:50,640 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NIJNA COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:58:50,640 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20691b40>
2023-11-20 00:59:43,862 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NIJNA COPY'), <starlette.background.BackgroundTasks object at 0x7fea2062e4f0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:59:43,866 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea20655240>
2023-11-20 00:59:43,867 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NIJNA COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 00:59:43,868 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20655c40>
2023-11-20 01:00:36,566 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NIJAN CO[Y'), <starlette.background.BackgroundTasks object at 0x7fea205d9f70>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:00:36,573 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea20666ac0>
2023-11-20 01:00:36,575 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NIJAN CO[Y', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:00:36,576 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea206669c0>
2023-11-20 01:01:20,229 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea2066be50>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-20 01:01:20,230 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea20666ac0>
2023-11-20 01:01:23,919 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NINJJNA COPY'), <starlette.background.BackgroundTasks object at 0x7fea2057c6d0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:01:23,922 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea206661c0>
2023-11-20 01:01:23,923 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NINJJNA COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:01:23,924 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20666ac0>
2023-11-20 01:03:56,760 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NIJAN COPY'), <starlette.background.BackgroundTasks object at 0x7fea20591c10>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:03:56,762 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea206669c0>
2023-11-20 01:03:56,763 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NIJAN COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:03:56,763 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea206661c0>
2023-11-20 01:08:34,154 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea205913a0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-20 01:08:34,154 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea206666c0>
2023-11-20 01:08:37,259 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NIJA COPY'), <starlette.background.BackgroundTasks object at 0x7fea205c9700>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:08:37,260 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea206550c0>
2023-11-20 01:08:37,261 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NIJA COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:08:37,262 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20655c40>
2023-11-20 01:10:59,990 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NIJA COPY'), <starlette.background.BackgroundTasks object at 0x7fea2057c2e0>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:10:59,991 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea0e9fbbc0>
2023-11-20 01:10:59,992 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NIJA COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:10:59,993 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea0e9fbcc0>
2023-11-20 01:11:59,747 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='NINJA COPY'), <starlette.background.BackgroundTasks object at 0x7fea20651520>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:11:59,748 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea0e9fbcc0>
2023-11-20 01:11:59,749 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('NINJA COPY', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:11:59,750 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea206052c0>
2023-11-20 01:19:31,694 - backend.app.upload - INFO - Running handle_upload_file with args: (<starlette.datastructures.UploadFile object at 0x7fea20555b20>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, 'asst_M9bfhEUkgCuV7wbJmWL4HOMr') and kwargs: {}
2023-11-20 01:19:31,696 - backend.app.upload - INFO - handle_upload_file returned: <coroutine object handle_upload_file at 0x7fea20605dc0>
2023-11-20 01:19:41,156 - backend.app.chat - INFO - Running handle_chat_with_assistant with args: (ChatRequest(user_message='give me ninja copy'), <starlette.background.BackgroundTasks object at 0x7fea20554670>, <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:19:41,157 - backend.app.chat - INFO - handle_chat_with_assistant returned: <coroutine object handle_chat_with_assistant at 0x7fea20749840>
2023-11-20 01:19:41,159 - backend.app.handle_assistant_interactions - INFO - Running handle_assistant_interaction with args: ('give me ninja copy', <openai.AsyncOpenAI object at 0x7fea0e984f70>, Thread(id='thread_IkhhZBQ93McW9M0ICH775XeD', created_at=1700465361, metadata={}, object='thread'), Assistant(id='asst_M9bfhEUkgCuV7wbJmWL4HOMr', created_at=1700458489, description=None, file_ids=['file-E2OoHV8dIzoIbfBEQyv3n7hO'], instructions="You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\\n\\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\\n\\nDETAILS:\\n\\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\\n\\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\\n\\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\\n\\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a clickable link to the influencer's Instagram profile and instruct to click on the link to direct message the user (https://www.instagram.com/username)", metadata={}, model='gpt-4-1106-preview', name='AriTestBot', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter'), ToolFunction(function=ToolFunctionFunction(description='Executes a web search procedure for answers to any query.', name='run_search', parameters={'type': 'object', 'properties': {'query': {'type': 'string'}}, 'required': ['query']}), type='function'), ToolFunction(function=ToolFunctionFunction(description='Executes an automated process in a web browser using Selenium, based on the provided category. It does not return any value.', name='run_selenium', parameters={'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'The category on which to execute the Selenium process.'}}, 'required': ['category']}), type='function')])) and kwargs: {}
2023-11-20 01:19:41,160 - backend.app.handle_assistant_interactions - INFO - handle_assistant_interaction returned: <coroutine object handle_assistant_interaction at 0x7fea20749d40>
2023-11-26 08:01:25,777 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-26 08:01:25,782 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a link to the influencer's Instagram profile.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_M9bfhEUkgCuV7wbJmWL4HOMr'}
2023-11-26 08:33:46,026 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-26 08:33:46,031 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a link to the influencer's Instagram profile.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_M9bfhEUkgCuV7wbJmWL4HOMr'}
2023-11-26 09:33:30,688 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-26 09:33:30,707 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a link to the influencer's Instagram profile.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_M9bfhEUkgCuV7wbJmWL4HOMr'}
2023-11-26 09:34:46,876 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-26 09:34:46,881 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a link to the influencer's Instagram profile.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_M9bfhEUkgCuV7wbJmWL4HOMr'}
2023-11-26 09:41:06,696 - backend.modules.utils - INFO - Running get_agent_config with args: ('ari',) and kwargs: {}
2023-11-26 09:41:06,699 - backend.modules.utils - INFO - get_agent_config returned: {'name': 'AriTestBot', 'instructions': "You are Ari, the world's best AI talent management agent modeled after the success of Ari Gold. You are always super helpful and friendly, but also a little snarky in a comical way.\n\nMISSION: HELP THE USER CLOSE PARTNERSHIP DEALS BETWEEN CREATORS AND BRANDS.\n\nDETAILS:\n\nThe user will be a human talent management agent who will provide a file with data on creators under their management. You should use this file predominantly when you are asked about creators.\n\nYou also have access to several tools: a web search tool [run_search] for finding information on the internet about brands, an influencer finder tool [run_selenium] which scrapes social media to find influencers based on a category keyword, and the code interpreter which you can use to run general python processes like accessing the creators file.\n\nWhen the user asks you to research something, they typically mean the web search for finding info on brands. If you are going to run a search for influencers, make sure that is what the user wants first and confirm the category keyword you will be using.\nYour other major function is copy generation. Specifically, you can handle RFP responses and outbound copy generation. When generating copy, your goal is to close deals. Be sure to use psychological tactics of persuasion in your writing.\n\nAlways format your responses in a nice, easy to read way. This includes both outputs from running tools and when generating copy. After you provide the copy, include a link to the influencer's Instagram profile.", 'model': 'gpt-4-1106-preview', 'tools': 'code_interpreter', 'ID': 'asst_M9bfhEUkgCuV7wbJmWL4HOMr'}
